pub use deploy_resturant_with_pk_owner::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod deploy_resturant_with_pk_owner {
    pub use super::super::shared_types::*;
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::None,
            functions: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("IS_SCRIPT"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("IS_SCRIPT"),
                            inputs: ::std::vec![],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Bool,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("bool"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::View,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("deployments"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("deployments"),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(
                                        256usize,
                                    ),
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("uint256"),
                                    ),
                                },
                            ],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("name"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::String,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("string"),
                                    ),
                                },
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("addr"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("address"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::View,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("findChainName"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("findChainName"),
                            inputs: ::std::vec![],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::String,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("string"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::NonPayable,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("getChain"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("getChain"),
                            inputs: ::std::vec![],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Tuple(
                                        ::std::vec![
                                            ::ethers::core::abi::ethabi::ParamType::String,
                                            ::ethers::core::abi::ethabi::ParamType::Uint(256usize),
                                            ::ethers::core::abi::ethabi::ParamType::String,
                                            ::ethers::core::abi::ethabi::ParamType::String,
                                        ],
                                    ),
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("struct StdChains.Chain"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::NonPayable,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("run"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("run"),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("resturantOwner"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("address"),
                                    ),
                                },
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("name"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::String,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("string"),
                                    ),
                                },
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("symbol"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::String,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("string"),
                                    ),
                                },
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("controllerAddress"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("address"),
                                    ),
                                },
                            ],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("contract ResturantToken"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::NonPayable,
                        },
                    ],
                ),
            ]),
            events: ::std::collections::BTreeMap::new(),
            errors: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("InvalidChain"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::AbiError {
                            name: ::std::borrow::ToOwned::to_owned("InvalidChain"),
                            inputs: ::std::vec![],
                        },
                    ],
                ),
            ]),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static DEPLOYRESTURANTWITHPKOWNER_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(__abi);
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"`\x80`@R`\x04\x80T`\x01`\xFF\x19\x91\x82\x16\x81\x17\x90\x92U`\x0C\x80T\x90\x91\x16\x90\x91\x17\x90U4\x80\x15b\0\0.W`\0\x80\xFD[P`@\x80Qc\x01X\x7F\x95`\xE6\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x08`D\x82\x01RgETH_FROM`\xC0\x1B`d\x82\x01R`\0`$\x82\x01\x81\x90R\x90`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90cV\x1F\xE5@\x90`\x84\x01` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\0\xA1W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\0\xC7\x91\x90b\0\x05\xB4V[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16\x15b\0\0\xFFW`\x0C\x80Ta\x01\0`\x01`\xA8\x1B\x03\x19\x16a\x01\0`\x01`\x01`\xA0\x1B\x03\x84\x16\x02\x17\x90Ub\0\x03+V[`\0b\0\x01\x0Bb\0\x032V[\x90P\x80\x15b\0\x01\xB4W`@Qc\x08\x84\0\x19`\xE2\x1B\x81R`\x04\x81\x01\x82\x90R`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90c\"\x10\0d\x90`$\x01` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x01bW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x01\x88\x91\x90b\0\x05\xB4V[`\x0C`\x01a\x01\0\n\x81T\x81`\x01`\x01`\xA0\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\xA0\x1B\x03\x16\x02\x17\x90UPb\0\x03)V[`@\x80Q``\x81\x01\x90\x91R`;\x80\x82R`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x91c\xD1Esl\x91b\x0037` \x83\x019`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01b\0\x02\x02\x91\x90b\0\x06:V[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x02\"W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x02L\x91\x90\x81\x01\x90b\0\x06\x84V[`\r\x90b\0\x02[\x90\x82b\0\x07\xCBV[Pb\0\x03\x01`\r\x80Tb\0\x02o\x90b\0\x07<V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Tb\0\x02\x9D\x90b\0\x07<V[\x80\x15b\0\x02\xEEW\x80`\x1F\x10b\0\x02\xC2Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91b\0\x02\xEEV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11b\0\x02\xD0W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP`\0b\0\x04\xB5` \x1B` \x1CV[P`\x0C\x80T`\x01`\x01`\xA0\x1B\x03\x90\x92\x16a\x01\0\x02a\x01\0`\x01`\xA8\x1B\x03\x19\x90\x92\x16\x91\x90\x91\x17\x90U[P[Pb\0\x08\xDBV[`\0Fb\xAA6\xA7\x03b\0\x03\xEFW`@\x80Qc^\x974\x8F`\xE0\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x13`D\x82\x01R\x7FSEPOLIA_PRIVATE_KEY\0\0\0\0\0\0\0\0\0\0\0\0\0`d\x82\x01R`\0`$\x82\x01R`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90c^\x974\x8F\x90`\x84\x01[` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x03\xC4W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x03\xEA\x91\x90b\0\x08\x97V[\x90P\x90V[F`\x05\x03b\0\x04WW`@\x80Qc^\x974\x8F`\xE0\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x12`D\x82\x01RqGOERLI_PRIVATE_KEY`p\x1B`d\x82\x01R`\0`$\x82\x01R`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90c^\x974\x8F\x90`\x84\x01b\0\x03\xA4V[`@\x80Qc^\x974\x8F`\xE0\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x11`D\x82\x01RpANVIL_PRIVATE_KEY`x\x1B`d\x82\x01R`\0`$\x82\x01R`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90c^\x974\x8F\x90`\x84\x01b\0\x03\xA4V[`@Qcb)I\x8B`\xE0\x1B\x81R`\0\x90\x81\x90`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90cb)I\x8B\x90b\0\x04\xF0\x90\x87\x90\x87\x90`\x04\x01b\0\x08\xB1V[` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x05\x0EW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x054\x91\x90b\0\x08\x97V[`@Qc\x08\x84\0\x19`\xE2\x1B\x81R`\x04\x81\x01\x82\x90R\x90\x91P`\0\x80Q` b\x003\x17\x839\x81Q\x91R\x90c\"\x10\0d\x90`$\x01` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x05\x85W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x05\xAB\x91\x90b\0\x05\xB4V[\x91P\x92P\x92\x90PV[`\0` \x82\x84\x03\x12\x15b\0\x05\xC7W`\0\x80\xFD[\x81Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14b\0\x05\xDFW`\0\x80\xFD[\x93\x92PPPV[`\0[\x83\x81\x10\x15b\0\x06\x03W\x81\x81\x01Q\x83\x82\x01R` \x01b\0\x05\xE9V[PP`\0\x91\x01RV[`\0\x81Q\x80\x84Rb\0\x06&\x81` \x86\x01` \x86\x01b\0\x05\xE6V[`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01` \x01\x92\x91PPV[`@\x81R`\x08`@\x82\x01RgMNEMONIC`\xC0\x1B``\x82\x01R`\x80` \x82\x01R`\0b\0\x05\xDF`\x80\x83\x01\x84b\0\x06\x0CV[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0` \x82\x84\x03\x12\x15b\0\x06\x97W`\0\x80\xFD[\x81Q`\x01`\x01`@\x1B\x03\x80\x82\x11\x15b\0\x06\xAFW`\0\x80\xFD[\x81\x84\x01\x91P\x84`\x1F\x83\x01\x12b\0\x06\xC4W`\0\x80\xFD[\x81Q\x81\x81\x11\x15b\0\x06\xD9Wb\0\x06\xD9b\0\x06nV[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15b\0\x07\x04Wb\0\x07\x04b\0\x06nV[\x81`@R\x82\x81R\x87` \x84\x87\x01\x01\x11\x15b\0\x07\x1EW`\0\x80\xFD[b\0\x071\x83` \x83\x01` \x88\x01b\0\x05\xE6V[\x97\x96PPPPPPPV[`\x01\x81\x81\x1C\x90\x82\x16\x80b\0\x07QW`\x7F\x82\x16\x91P[` \x82\x10\x81\x03b\0\x07rWcNH{q`\xE0\x1B`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[`\x1F\x82\x11\x15b\0\x07\xC6W`\0\x81\x81R` \x81 `\x1F\x85\x01`\x05\x1C\x81\x01` \x86\x10\x15b\0\x07\xA1WP\x80[`\x1F\x85\x01`\x05\x1C\x82\x01\x91P[\x81\x81\x10\x15b\0\x07\xC2W\x82\x81U`\x01\x01b\0\x07\xADV[PPP[PPPV[\x81Q`\x01`\x01`@\x1B\x03\x81\x11\x15b\0\x07\xE7Wb\0\x07\xE7b\0\x06nV[b\0\x07\xFF\x81b\0\x07\xF8\x84Tb\0\x07<V[\x84b\0\x07xV[` \x80`\x1F\x83\x11`\x01\x81\x14b\0\x087W`\0\x84\x15b\0\x08\x1EWP\x85\x83\x01Q[`\0\x19`\x03\x86\x90\x1B\x1C\x19\x16`\x01\x85\x90\x1B\x17\x85Ub\0\x07\xC2V[`\0\x85\x81R` \x81 `\x1F\x19\x86\x16\x91[\x82\x81\x10\x15b\0\x08hW\x88\x86\x01Q\x82U\x94\x84\x01\x94`\x01\x90\x91\x01\x90\x84\x01b\0\x08GV[P\x85\x82\x10\x15b\0\x08\x87W\x87\x85\x01Q`\0\x19`\x03\x88\x90\x1B`\xF8\x16\x1C\x19\x16\x81U[PPPPP`\x01\x90\x81\x1B\x01\x90UPV[`\0` \x82\x84\x03\x12\x15b\0\x08\xAAW`\0\x80\xFD[PQ\x91\x90PV[`@\x81R`\0b\0\x08\xC6`@\x83\x01\x85b\0\x06\x0CV[\x90Pc\xFF\xFF\xFF\xFF\x83\x16` \x83\x01R\x93\x92PPPV[a*,\x80b\0\x08\xEB`\09`\0\xF3\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0gW`\x005`\xE0\x1C\x80c2\xE2\x1A\xE7\x11a\0PW\x80c2\xE2\x1A\xE7\x14a\0\xCEW\x80c\xD2\0re\x14a\0\xE3W\x80c\xF8\xCC\xBFG\x14a\0\xF8W`\0\x80\xFD[\x80c\x06`\x9B\xBE\x14a\0lW\x80c\x177W\xED\x14a\0\x96W[`\0\x80\xFD[a\0\x7Fa\0z6`\x04a\x1EzV[a\x01\x15V[`@Qa\0\x8D\x92\x91\x90a\x1E\xE3V[`@Q\x80\x91\x03\x90\xF3[a\0\xA9a\0\xA46`\x04a\x1F\x86V[a\x01\xE7V[`@Qs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x90\x91\x16\x81R` \x01a\0\x8DV[a\0\xD6a\x02\x92V[`@Qa\0\x8D\x91\x90a \x1BV[a\0\xEBa\x02\xCBV[`@Qa\0\x8D\x91\x90a \x86V[`\x0CTa\x01\x05\x90`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01a\0\x8DV[`\x10\x81\x81T\x81\x10a\x01%W`\0\x80\xFD[\x90`\0R` `\0 \x90`\x02\x02\x01`\0\x91P\x90P\x80`\0\x01\x80Ta\x01H\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x01t\x90a \x99V[\x80\x15a\x01\xC1W\x80`\x1F\x10a\x01\x96Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x01\xC1V[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x01\xA4W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPP`\x01\x90\x93\x01T\x91\x92PPs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x82V[`@Q\x7F\xEA\x07y>\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\0\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x83\x16\x90c\xEA\x07y>\x90a\x02D\x90\x8A\x90\x8A\x90\x8A\x90\x8A\x90\x8A\x90`\x04\x01a!\x17V[` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15a\x02cW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02\x87\x91\x90a!fV[\x97\x96PPPPPPPV[a\x02\xBD`@Q\x80`\x80\x01`@R\x80``\x81R` \x01`\0\x81R` \x01``\x81R` \x01``\x81RP\x90V[a\x02\xC6Fa\x04\xCAV[\x90P\x90V[```\0F\x90P`\0\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1Cs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16c\xA8Z\x84\x18`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x03BW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x03j\x91\x90\x81\x01\x90a\"xV[\x90P`\0[\x81Q\x81\x10\x15a\x04\x97W\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1Cs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16c\x98h\x004\x83\x83\x81Q\x81\x10a\x03\xC9Wa\x03\xC9a#\x92V[` \x02` \x01\x01Q`\x01`\x02\x81\x10a\x03\xE3Wa\x03\xE3a#\x92V[` \x02\x01Q`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01a\x04\x04\x91\x90a \x86V[` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x92PPP\x80\x15a\x04?WP`@\x80Q`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01\x90\x92Ra\x04<\x91\x81\x01\x90a#\xC1V[`\x01[\x15a\x04\x85WP\x82F\x03a\x04\x85W\x81\x81\x81Q\x81\x10a\x04^Wa\x04^a#\x92V[` \x02` \x01\x01Q`\0`\x02\x81\x10a\x04xWa\x04xa#\x92V[` \x02\x01Q\x93PPPP\x90V[\x80a\x04\x8F\x81a$\tV[\x91PPa\x03oV[P`@Q\x7F\xAF\xE7\xF4\xE0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[a\x04\xF5`@Q\x80`\x80\x01`@R\x80``\x81R` \x01`\0\x81R` \x01``\x81R` \x01``\x81RP\x90V[\x81`\0\x03a\x05\x8AW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`2`$\x82\x01R\x7FStdChains getChain(uint256): Cha`D\x82\x01R\x7Fin ID cannot be 0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x05\x92a\t\x1AV[`\0\x82\x81R`\x03` R`@\x81 \x80Ta\x05\xAB\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x05\xD7\x90a \x99V[\x80\x15a\x06$W\x80`\x1F\x10a\x05\xF9Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x06$V[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x06\x07W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P`\x01\x81`@Qa\x06;\x91\x90a$AV[\x90\x81R` \x01`@Q\x80\x91\x03\x90 `@Q\x80`\x80\x01`@R\x90\x81`\0\x82\x01\x80Ta\x06d\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x06\x90\x90a \x99V[\x80\x15a\x06\xDDW\x80`\x1F\x10a\x06\xB2Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x06\xDDV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x06\xC0W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x81R` \x01`\x01\x82\x01T\x81R` \x01`\x02\x82\x01\x80Ta\x07\0\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x07,\x90a \x99V[\x80\x15a\x07yW\x80`\x1F\x10a\x07NWa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x07yV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x07\\W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x81R` \x01`\x03\x82\x01\x80Ta\x07\x92\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x07\xBE\x90a \x99V[\x80\x15a\x08\x0BW\x80`\x1F\x10a\x07\xE0Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x08\x0BV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x07\xEEW\x82\x90\x03`\x1F\x16\x82\x01\x91[PPP\x91\x90\x92RPPP` \x81\x01Q`@Q\x7Fi\0\xA3\xAE\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x81\x01\x86\x90R\x91\x93P\x15\x15\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x08\x89W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x08\xB1\x91\x90\x81\x01\x90a$]V[`@Q` \x01a\x08\xC1\x91\x90a$\x92V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90a\t\x08W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x01a\x05\x81\x91\x90a \x86V[Pa\t\x13\x81\x83a\x14\x87V[\x93\x92PPPV[`\0T`\xFF\x16\x15a\t'WV[`\0\x80T\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\0\x16`\x01\x17\x90U`@\x80Q\x80\x82\x01\x82R`\x05\x80\x82R\x7Fanvil\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x80\x84\x01\x91\x90\x91R\x83Q`\xA0\x81\x01\x85R``\x81\x01\x92\x83R\x7FAnvil\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x80\x82\x01R\x91\x82Razi\x82\x82\x01R\x83Q\x80\x85\x01\x85R`\x15\x81R\x7Fhttp://127.0.0.1:8545\0\0\0\0\0\0\0\0\0\0\0\x91\x81\x01\x91\x90\x91R\x92\x81\x01\x92\x90\x92Ra\n\x0C\x91a\x18\tV[a\n\xB2`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7Fmainnet\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7FMainnet\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\x01\x81R` \x01`@Q\x80``\x01`@R\x80`=\x81R` \x01a(\x99`=\x919\x90Ra\x18\tV[a\x0BX`@Q\x80`@\x01`@R\x80`\x06\x81R` \x01\x7Fgoerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x06\x81R` \x01\x7FGoerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\x05\x81R` \x01`@Q\x80``\x01`@R\x80`<\x81R` \x01a)\xF0`<\x919\x90Ra\x18\tV[a\x0C\0`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7Fsepolia\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7FSepolia\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01b\xAA6\xA7\x81R` \x01`@Q\x80``\x01`@R\x80`=\x81R` \x01a(\xD6`=\x919\x90Ra\x18\tV[a\x0C\xC4`@Q\x80`@\x01`@R\x80`\x08\x81R` \x01\x7Foptimism\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x08\x81R` \x01\x7FOptimism\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\n\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1B\x81R` \x01\x7Fhttps://mainnet.optimism.io\0\0\0\0\0\x81RP\x81RPa\x18\tV[a\r\x89`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7Foptimism_goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7FOptimism Goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\x01\xA4\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1A\x81R` \x01\x7Fhttps://goerli.optimism.io\0\0\0\0\0\0\x81RP\x81RPa\x18\tV[a\x0EN`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7Farbitrum_one\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7FArbitrum One\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA4\xB1\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Fhttps://arb1.arbitrum.io/rpc\0\0\0\0\x81RP\x81RPa\x18\tV[a\x0E\xF6`@Q\x80`@\x01`@R\x80`\x13\x81R` \x01\x7Farbitrum_one_goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x13\x81R` \x01\x7FArbitrum One Goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01b\x06n\xED\x81R` \x01`@Q\x80``\x01`@R\x80`%\x81R` \x01a)\x80`%\x919\x90Ra\x18\tV[a\x0F\xBB`@Q\x80`@\x01`@R\x80`\r\x81R` \x01\x7Farbitrum_nova\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\r\x81R` \x01\x7FArbitrum Nova\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA4\xBA\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Fhttps://nova.arbitrum.io/rpc\0\0\0\0\x81RP\x81RPa\x18\tV[a\x10\x7F`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7Fpolygon\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7FPolygon\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\x89\x81R` \x01`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7Fhttps://polygon-rpc.com\0\0\0\0\0\0\0\0\0\x81RP\x81RPa\x18\tV[a\x11'`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7Fpolygon_mumbai\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7FPolygon Mumbai\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01b\x018\x81\x81R` \x01`@Q\x80``\x01`@R\x80`!\x81R` \x01a)_`!\x919\x90Ra\x18\tV[a\x11\xCE`@Q\x80`@\x01`@R\x80`\t\x81R` \x01\x7Favalanche\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\t\x81R` \x01\x7FAvalanche\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA8j\x81R` \x01`@Q\x80``\x01`@R\x80`%\x81R` \x01a)\x13`%\x919\x90Ra\x18\tV[a\x12u`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7Favalanche_fuji\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7FAvalanche Fuji\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA8i\x81R` \x01`@Q\x80``\x01`@R\x80`*\x81R` \x01a)\xA5`*\x919\x90Ra\x18\tV[a\x13\x1B`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7Fbnb_smart_chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7FBNB Smart Chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`8\x81R` \x01`@Q\x80``\x01`@R\x80`!\x81R` \x01a)\xCF`!\x919\x90Ra\x18\tV[a\x13\xC1`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7Fbnb_smart_chain_testnet\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7FBNB Smart Chain Testnet\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`a\x81R` \x01`@Q\x80``\x01`@R\x80`'\x81R` \x01a)8`'\x919\x90Ra\x18\tV[a\x14\x85`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7Fgnosis_chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7FGnosis Chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`d\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1B\x81R` \x01\x7Fhttps://rpc.gnosischain.com\0\0\0\0\0\x81RP\x81RPa\x18\tV[V[a\x14\xB2`@Q\x80`\x80\x01`@R\x80``\x81R` \x01`\0\x81R` \x01``\x81R` \x01``\x81RP\x90V[\x81``\x01QQ`\0\x03a\x18\0W`@Q\x7F\x97Zl\xE9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rsq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97Zl\xE9\x90a\x15\x0F\x90\x86\x90`\x04\x01a \x86V[`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x92PPP\x80\x15a\x15MWP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x15J\x91\x90\x81\x01\x90a$]V[`\x01[a\x17\xFAW=\x80\x80\x15a\x15{W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x15\x80V[``\x91P[P`\0a\x15\x8C\x85a\x18cV[`@Q` \x01a\x15\x9C\x91\x90a%$V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x91\x90R`\x04T\x90\x91P`\xFF\x16\x15a\x16\xA0W\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1Cs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16c\xD1Esl\x82`\x02\x88`@Qa\x16\n\x91\x90a$AV[\x90\x81R`@Q\x90\x81\x90\x03` \x01\x81 \x7F\xFF\xFF\xFF\xFF\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\xE0\x85\x90\x1B\x16\x82Ra\x16O\x92\x91`\x04\x01a%eV[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15a\x16nW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x16\x96\x91\x90\x81\x01\x90a$]V[``\x85\x01Ra\x17;V[`@Q\x7F\xF8w\xCB\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rsq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\xF8w\xCB\x19\x90a\x16\xF0\x90\x84\x90`\x04\x01a \x86V[`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x17\rW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x175\x91\x90\x81\x01\x90a$]V[``\x85\x01R[`\0\x85`@Q` \x01a\x17N\x91\x90a&\x1EV[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90Ra\x17k\x91`$\x01a \x86V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x91\x90R` \x80\x82\x01\x80Q{\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x7F\x0B\xC4E\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x17\x81R\x85Q\x91\x86\x01\x91\x90\x91 \x82Q\x90\x91 \x91\x92P\x14\x15\x80a\x17\xE5WP``\x85\x01QQ\x15[\x15a\x17\xF2W\x82Q\x83` \x01\xFD[PPPa\x18\0V[``\x83\x01R[P\x80[\x92\x91PPV[`\0\x81`@\x01Q\x90P\x80`\x02\x84`@Qa\x18#\x91\x90a$AV[\x90\x81R` \x01`@Q\x80\x91\x03\x90 \x90\x81a\x18=\x91\x90a&\xB2V[P`@\x80Q` \x81\x01\x82R`\0\x81R\x90\x83\x01Ra\x18Z\x83\x83a\x1A)V[`@\x90\x91\x01RPV[```\0\x82\x90P`\0\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x18\x86Wa\x18\x86a!\x83V[`@Q\x90\x80\x82R\x80`\x1F\x01`\x1F\x19\x16` \x01\x82\x01`@R\x80\x15a\x18\xB0W` \x82\x01\x81\x806\x837\x01\x90P[P\x90P`\0[\x82Q\x81\x10\x15a\x1A!W`\0\x83\x82\x81Q\x81\x10a\x18\xD3Wa\x18\xD3a#\x92V[\x01` \x01Q\x7F\xFF\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x90P\x7Fa\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x10\x80\x15\x90a\x19nWP\x7Fz\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7F\xFF\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x82\x16\x11\x15[\x15a\x19\xCBWa\x19\x82` `\xF8\x83\x90\x1Ca'\xAEV[`\xF8\x1B\x83\x83\x81Q\x81\x10a\x19\x97Wa\x19\x97a#\x92V[` \x01\x01\x90~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x19\x16\x90\x81`\0\x1A\x90SPa\x1A\x0EV[\x80\x83\x83\x81Q\x81\x10a\x19\xDEWa\x19\xDEa#\x92V[` \x01\x01\x90~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x19\x16\x90\x81`\0\x1A\x90SP[P\x80a\x1A\x19\x81a$\tV[\x91PPa\x18\xB6V[P\x93\x92PPPV[\x81Q`\0\x03a\x1A\xE0W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`M`$\x82\x01R\x7FStdChains setChain(string,ChainD`D\x82\x01R\x7Fata): Chain alias cannot be the `d\x82\x01R\x7Fempty string.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x84\x82\x01R`\xA4\x01a\x05\x81V[\x80` \x01Q`\0\x03a\x1BtW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`;`$\x82\x01R\x7FStdChains setChain(string,ChainD`D\x82\x01R\x7Fata): Chain ID cannot be 0.\0\0\0\0\0`d\x82\x01R`\x84\x01a\x05\x81V[a\x1B|a\t\x1AV[` \x80\x82\x01Q`\0\x90\x81R`\x03\x90\x91R`@\x81 \x80Ta\x1B\x9B\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x1B\xC7\x90a \x99V[\x80\x15a\x1C\x14W\x80`\x1F\x10a\x1B\xE9Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x1C\x14V[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x1B\xF7W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P\x80Q`\0\x14\x80a\x1C8WP\x82\x80Q\x90` \x01 \x81\x80Q\x90` \x01 \x14[` \x83\x01Q`@Q\x7Fi\0\xA3\xAE\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x81\x01\x91\x90\x91Rsq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x1C\xA7W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x1C\xCF\x91\x90\x81\x01\x90a$]V[\x82`@Q` \x01a\x1C\xE1\x92\x91\x90a'\xC7V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90a\x1D(W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x01a\x05\x81\x91\x90a \x86V[P`\0`\x01\x84`@Qa\x1D;\x91\x90a$AV[\x90\x81R` \x01`@Q\x80\x91\x03\x90 `\x01\x01T\x90P`\x03`\0\x82\x81R` \x01\x90\x81R` \x01`\0 `\0a\x1Dn\x91\x90a\x1E$V[`@Q\x80`\x80\x01`@R\x80\x84`\0\x01Q\x81R` \x01\x84` \x01Q\x81R` \x01\x85\x81R` \x01\x84`@\x01Q\x81RP`\x01\x85`@Qa\x1D\xAB\x91\x90a$AV[\x90\x81R`@Q\x90\x81\x90\x03` \x01\x90 \x81Q\x81\x90a\x1D\xC8\x90\x82a&\xB2V[P` \x82\x01Q`\x01\x82\x01U`@\x82\x01Q`\x02\x82\x01\x90a\x1D\xE7\x90\x82a&\xB2V[P``\x82\x01Q`\x03\x82\x01\x90a\x1D\xFC\x90\x82a&\xB2V[PPP` \x80\x84\x01Q`\0\x90\x81R`\x03\x90\x91R`@\x90 a\x1E\x1D\x85\x82a&\xB2V[PPPPPV[P\x80Ta\x1E0\x90a \x99V[`\0\x82U\x80`\x1F\x10a\x1E@WPPV[`\x1F\x01` \x90\x04\x90`\0R` `\0 \x90\x81\x01\x90a\x1E^\x91\x90a\x1EaV[PV[[\x80\x82\x11\x15a\x1EvW`\0\x81U`\x01\x01a\x1EbV[P\x90V[`\0` \x82\x84\x03\x12\x15a\x1E\x8CW`\0\x80\xFD[P5\x91\x90PV[`\0[\x83\x81\x10\x15a\x1E\xAEW\x81\x81\x01Q\x83\x82\x01R` \x01a\x1E\x96V[PP`\0\x91\x01RV[`\0\x81Q\x80\x84Ra\x1E\xCF\x81` \x86\x01` \x86\x01a\x1E\x93V[`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01` \x01\x92\x91PPV[`@\x81R`\0a\x1E\xF6`@\x83\x01\x85a\x1E\xB7V[\x90Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x83\x16` \x83\x01R\x93\x92PPPV[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x14a\x1E^W`\0\x80\xFD[`\0\x80\x83`\x1F\x84\x01\x12a\x1FOW`\0\x80\xFD[P\x815g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x1FgW`\0\x80\xFD[` \x83\x01\x91P\x83` \x82\x85\x01\x01\x11\x15a\x1F\x7FW`\0\x80\xFD[\x92P\x92\x90PV[`\0\x80`\0\x80`\0\x80`\x80\x87\x89\x03\x12\x15a\x1F\x9FW`\0\x80\xFD[\x865a\x1F\xAA\x81a\x1F\x1BV[\x95P` \x87\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\x1F\xC7W`\0\x80\xFD[a\x1F\xD3\x8A\x83\x8B\x01a\x1F=V[\x90\x97P\x95P`@\x89\x015\x91P\x80\x82\x11\x15a\x1F\xECW`\0\x80\xFD[Pa\x1F\xF9\x89\x82\x8A\x01a\x1F=V[\x90\x94P\x92PP``\x87\x015a \r\x81a\x1F\x1BV[\x80\x91PP\x92\x95P\x92\x95P\x92\x95V[` \x81R`\0\x82Q`\x80` \x84\x01Ra 7`\xA0\x84\x01\x82a\x1E\xB7V[\x90P` \x84\x01Q`@\x84\x01R`@\x84\x01Q`\x1F\x19\x80\x85\x84\x03\x01``\x86\x01Ra _\x83\x83a\x1E\xB7V[\x92P``\x86\x01Q\x91P\x80\x85\x84\x03\x01`\x80\x86\x01RPa }\x82\x82a\x1E\xB7V[\x95\x94PPPPPV[` \x81R`\0a\t\x13` \x83\x01\x84a\x1E\xB7V[`\x01\x81\x81\x1C\x90\x82\x16\x80a \xADW`\x7F\x82\x16\x91P[` \x82\x10\x81\x03a \xE6W\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[\x81\x83R\x81\x81` \x85\x017P`\0` \x82\x84\x01\x01R`\0` `\x1F\x19`\x1F\x84\x01\x16\x84\x01\x01\x90P\x92\x91PPV[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x86\x16\x81R``` \x82\x01R`\0a!G``\x83\x01\x86\x88a \xECV[\x82\x81\x03`@\x84\x01Ra!Z\x81\x85\x87a \xECV[\x98\x97PPPPPPPPV[`\0` \x82\x84\x03\x12\x15a!xW`\0\x80\xFD[\x81Qa\t\x13\x81a\x1F\x1BV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`A`\x04R`$`\0\xFD[`@\x80Q\x90\x81\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x82\x82\x10\x17\x15a!\xD5Wa!\xD5a!\x83V[`@R\x90V[`@Q`\x1F\x82\x01`\x1F\x19\x16\x81\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x82\x82\x10\x17\x15a\"\x04Wa\"\x04a!\x83V[`@R\x91\x90PV[`\0\x82`\x1F\x83\x01\x12a\"\x1DW`\0\x80\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\"7Wa\"7a!\x83V[a\"J` `\x1F\x19`\x1F\x84\x01\x16\x01a!\xDBV[\x81\x81R\x84` \x83\x86\x01\x01\x11\x15a\"_W`\0\x80\xFD[a\"p\x82` \x83\x01` \x87\x01a\x1E\x93V[\x94\x93PPPPV[`\0` \x80\x83\x85\x03\x12\x15a\"\x8BW`\0\x80\xFD[\x82Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\"\xA3W`\0\x80\xFD[\x81\x85\x01\x91P\x85`\x1F\x83\x01\x12a\"\xB7W`\0\x80\xFD[\x81Q\x81\x81\x11\x15a\"\xC9Wa\"\xC9a!\x83V[a\"\xD7\x84\x82`\x05\x1B\x01a!\xDBV[\x81\x81R`\x05\x91\x90\x91\x1B\x83\x01\x84\x01\x90\x84\x81\x01\x90\x88\x83\x11\x15a\"\xF6W`\0\x80\xFD[\x85\x85\x01[\x83\x81\x10\x15a#\x85W\x80Q\x85\x81\x11\x15a#\x11W`\0\x80\xFD[\x86\x01`?\x81\x01\x8B\x13a#\"W`\0\x80\xFD[a#*a!\xB2V[\x80\x8C``\x84\x01\x11\x15a#;W`\0\x80\xFD[\x89\x83\x01[``\x84\x01\x81\x10\x15a#uW\x80Q\x89\x81\x11\x15a#YW`\0\x80\xFD[a#g\x8F\x8D\x83\x88\x01\x01a\"\x0CV[\x84RP\x91\x8A\x01\x91\x8A\x01a#?V[P\x85RPP\x91\x86\x01\x91\x86\x01a\"\xFAV[P\x98\x97PPPPPPPPV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`2`\x04R`$`\0\xFD[`\0` \x82\x84\x03\x12\x15a#\xD3W`\0\x80\xFD[PQ\x91\x90PV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x11`\x04R`$`\0\xFD[`\0\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x03a$:Wa$:a#\xDAV[P`\x01\x01\x90V[`\0\x82Qa$S\x81\x84` \x87\x01a\x1E\x93V[\x91\x90\x91\x01\x92\x91PPV[`\0` \x82\x84\x03\x12\x15a$oW`\0\x80\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a$\x86W`\0\x80\xFD[a\"p\x84\x82\x85\x01a\"\x0CV[\x7FStdChains getChain(uint256): Cha\x81R\x7Fin with ID \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x82\x01R`\0\x82Qa$\xF0\x81`+\x85\x01` \x87\x01a\x1E\x93V[\x7F not found.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`+\x93\x90\x91\x01\x92\x83\x01RP`6\x01\x91\x90PV[`\0\x82Qa%6\x81\x84` \x87\x01a\x1E\x93V[\x7F_RPC_URL\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x92\x01\x91\x82RP`\x08\x01\x91\x90PV[`@\x81R`\0a%x`@\x83\x01\x85a\x1E\xB7V[` \x83\x82\x03\x81\x85\x01R`\0\x85Ta%\x8E\x81a \x99V[\x80\x85R`\x01\x82\x81\x16\x80\x15a%\xA9W`\x01\x81\x14a%\xE1Wa&\x0FV[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\0\x84\x16\x86\x88\x01R\x85\x83\x15\x15`\x05\x1B\x88\x01\x01\x94Pa&\x0FV[\x89`\0R\x85`\0 `\0[\x84\x81\x10\x15a&\x07W\x81T\x89\x82\x01\x89\x01R\x90\x83\x01\x90\x87\x01a%\xECV[\x88\x01\x87\x01\x95PP[P\x92\x99\x98PPPPPPPPPV[\x7Finvalid rpc url \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\0\x82Qa&V\x81`\x10\x85\x01` \x87\x01a\x1E\x93V[\x91\x90\x91\x01`\x10\x01\x92\x91PPV[`\x1F\x82\x11\x15a&\xADW`\0\x81\x81R` \x81 `\x1F\x85\x01`\x05\x1C\x81\x01` \x86\x10\x15a&\x8AWP\x80[`\x1F\x85\x01`\x05\x1C\x82\x01\x91P[\x81\x81\x10\x15a&\xA9W\x82\x81U`\x01\x01a&\x96V[PPP[PPPV[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a&\xCCWa&\xCCa!\x83V[a&\xE0\x81a&\xDA\x84Ta \x99V[\x84a&cV[` \x80`\x1F\x83\x11`\x01\x81\x14a'3W`\0\x84\x15a&\xFDWP\x85\x83\x01Q[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x03\x86\x90\x1B\x1C\x19\x16`\x01\x85\x90\x1B\x17\x85Ua&\xA9V[`\0\x85\x81R` \x81 `\x1F\x19\x86\x16\x91[\x82\x81\x10\x15a'bW\x88\x86\x01Q\x82U\x94\x84\x01\x94`\x01\x90\x91\x01\x90\x84\x01a'CV[P\x85\x82\x10\x15a'\x9EW\x87\x85\x01Q\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x03\x88\x90\x1B`\xF8\x16\x1C\x19\x16\x81U[PPPPP`\x01\x90\x81\x1B\x01\x90UPV[`\xFF\x82\x81\x16\x82\x82\x16\x03\x90\x81\x11\x15a\x18\x03Wa\x18\x03a#\xDAV[\x7FStdChains setChain(string,ChainD\x81R\x7Fata): Chain ID \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x82\x01R`\0\x83Qa(%\x81`/\x85\x01` \x88\x01a\x1E\x93V[\x7F already used by \"\0\0\0\0\0\0\0\0\0\0\0\0\0\0`/\x91\x84\x01\x91\x82\x01R\x83Qa(b\x81`A\x84\x01` \x88\x01a\x1E\x93V[\x7F\".\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`A\x92\x90\x91\x01\x91\x82\x01R`C\x01\x94\x93PPPPV\xFEhttps://mainnet.infura.io/v3/b9794ad1ddf84dfb8c34d6bb5dca2001https://sepolia.infura.io/v3/b9794ad1ddf84dfb8c34d6bb5dca2001https://api.avax.network/ext/bc/C/rpchttps://rpc.ankr.com/bsc_testnet_chapelhttps://rpc-mumbai.maticvigil.comhttps://goerli-rollup.arbitrum.io/rpchttps://api.avax-test.network/ext/bc/C/rpchttps://bsc-dataseed1.binance.orghttps://goerli.infura.io/v3/b9794ad1ddf84dfb8c34d6bb5dca2001\0\0\0\0\0\0\0\0\0\0\0\0q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-test test test test test test test test test test test junk";
    /// The bytecode of the contract.
    pub static DEPLOYRESTURANTWITHPKOWNER_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0gW`\x005`\xE0\x1C\x80c2\xE2\x1A\xE7\x11a\0PW\x80c2\xE2\x1A\xE7\x14a\0\xCEW\x80c\xD2\0re\x14a\0\xE3W\x80c\xF8\xCC\xBFG\x14a\0\xF8W`\0\x80\xFD[\x80c\x06`\x9B\xBE\x14a\0lW\x80c\x177W\xED\x14a\0\x96W[`\0\x80\xFD[a\0\x7Fa\0z6`\x04a\x1EzV[a\x01\x15V[`@Qa\0\x8D\x92\x91\x90a\x1E\xE3V[`@Q\x80\x91\x03\x90\xF3[a\0\xA9a\0\xA46`\x04a\x1F\x86V[a\x01\xE7V[`@Qs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x90\x91\x16\x81R` \x01a\0\x8DV[a\0\xD6a\x02\x92V[`@Qa\0\x8D\x91\x90a \x1BV[a\0\xEBa\x02\xCBV[`@Qa\0\x8D\x91\x90a \x86V[`\x0CTa\x01\x05\x90`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01a\0\x8DV[`\x10\x81\x81T\x81\x10a\x01%W`\0\x80\xFD[\x90`\0R` `\0 \x90`\x02\x02\x01`\0\x91P\x90P\x80`\0\x01\x80Ta\x01H\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x01t\x90a \x99V[\x80\x15a\x01\xC1W\x80`\x1F\x10a\x01\x96Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x01\xC1V[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x01\xA4W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPP`\x01\x90\x93\x01T\x91\x92PPs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x82V[`@Q\x7F\xEA\x07y>\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\0\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x83\x16\x90c\xEA\x07y>\x90a\x02D\x90\x8A\x90\x8A\x90\x8A\x90\x8A\x90\x8A\x90`\x04\x01a!\x17V[` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15a\x02cW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02\x87\x91\x90a!fV[\x97\x96PPPPPPPV[a\x02\xBD`@Q\x80`\x80\x01`@R\x80``\x81R` \x01`\0\x81R` \x01``\x81R` \x01``\x81RP\x90V[a\x02\xC6Fa\x04\xCAV[\x90P\x90V[```\0F\x90P`\0\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1Cs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16c\xA8Z\x84\x18`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x03BW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x03j\x91\x90\x81\x01\x90a\"xV[\x90P`\0[\x81Q\x81\x10\x15a\x04\x97W\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1Cs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16c\x98h\x004\x83\x83\x81Q\x81\x10a\x03\xC9Wa\x03\xC9a#\x92V[` \x02` \x01\x01Q`\x01`\x02\x81\x10a\x03\xE3Wa\x03\xE3a#\x92V[` \x02\x01Q`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01a\x04\x04\x91\x90a \x86V[` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x92PPP\x80\x15a\x04?WP`@\x80Q`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01\x90\x92Ra\x04<\x91\x81\x01\x90a#\xC1V[`\x01[\x15a\x04\x85WP\x82F\x03a\x04\x85W\x81\x81\x81Q\x81\x10a\x04^Wa\x04^a#\x92V[` \x02` \x01\x01Q`\0`\x02\x81\x10a\x04xWa\x04xa#\x92V[` \x02\x01Q\x93PPPP\x90V[\x80a\x04\x8F\x81a$\tV[\x91PPa\x03oV[P`@Q\x7F\xAF\xE7\xF4\xE0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[a\x04\xF5`@Q\x80`\x80\x01`@R\x80``\x81R` \x01`\0\x81R` \x01``\x81R` \x01``\x81RP\x90V[\x81`\0\x03a\x05\x8AW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`2`$\x82\x01R\x7FStdChains getChain(uint256): Cha`D\x82\x01R\x7Fin ID cannot be 0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x05\x92a\t\x1AV[`\0\x82\x81R`\x03` R`@\x81 \x80Ta\x05\xAB\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x05\xD7\x90a \x99V[\x80\x15a\x06$W\x80`\x1F\x10a\x05\xF9Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x06$V[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x06\x07W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P`\x01\x81`@Qa\x06;\x91\x90a$AV[\x90\x81R` \x01`@Q\x80\x91\x03\x90 `@Q\x80`\x80\x01`@R\x90\x81`\0\x82\x01\x80Ta\x06d\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x06\x90\x90a \x99V[\x80\x15a\x06\xDDW\x80`\x1F\x10a\x06\xB2Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x06\xDDV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x06\xC0W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x81R` \x01`\x01\x82\x01T\x81R` \x01`\x02\x82\x01\x80Ta\x07\0\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x07,\x90a \x99V[\x80\x15a\x07yW\x80`\x1F\x10a\x07NWa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x07yV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x07\\W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x81R` \x01`\x03\x82\x01\x80Ta\x07\x92\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x07\xBE\x90a \x99V[\x80\x15a\x08\x0BW\x80`\x1F\x10a\x07\xE0Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x08\x0BV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x07\xEEW\x82\x90\x03`\x1F\x16\x82\x01\x91[PPP\x91\x90\x92RPPP` \x81\x01Q`@Q\x7Fi\0\xA3\xAE\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x81\x01\x86\x90R\x91\x93P\x15\x15\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x08\x89W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x08\xB1\x91\x90\x81\x01\x90a$]V[`@Q` \x01a\x08\xC1\x91\x90a$\x92V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90a\t\x08W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x01a\x05\x81\x91\x90a \x86V[Pa\t\x13\x81\x83a\x14\x87V[\x93\x92PPPV[`\0T`\xFF\x16\x15a\t'WV[`\0\x80T\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\0\x16`\x01\x17\x90U`@\x80Q\x80\x82\x01\x82R`\x05\x80\x82R\x7Fanvil\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x80\x84\x01\x91\x90\x91R\x83Q`\xA0\x81\x01\x85R``\x81\x01\x92\x83R\x7FAnvil\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x80\x82\x01R\x91\x82Razi\x82\x82\x01R\x83Q\x80\x85\x01\x85R`\x15\x81R\x7Fhttp://127.0.0.1:8545\0\0\0\0\0\0\0\0\0\0\0\x91\x81\x01\x91\x90\x91R\x92\x81\x01\x92\x90\x92Ra\n\x0C\x91a\x18\tV[a\n\xB2`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7Fmainnet\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7FMainnet\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\x01\x81R` \x01`@Q\x80``\x01`@R\x80`=\x81R` \x01a(\x99`=\x919\x90Ra\x18\tV[a\x0BX`@Q\x80`@\x01`@R\x80`\x06\x81R` \x01\x7Fgoerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x06\x81R` \x01\x7FGoerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\x05\x81R` \x01`@Q\x80``\x01`@R\x80`<\x81R` \x01a)\xF0`<\x919\x90Ra\x18\tV[a\x0C\0`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7Fsepolia\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7FSepolia\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01b\xAA6\xA7\x81R` \x01`@Q\x80``\x01`@R\x80`=\x81R` \x01a(\xD6`=\x919\x90Ra\x18\tV[a\x0C\xC4`@Q\x80`@\x01`@R\x80`\x08\x81R` \x01\x7Foptimism\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x08\x81R` \x01\x7FOptimism\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\n\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1B\x81R` \x01\x7Fhttps://mainnet.optimism.io\0\0\0\0\0\x81RP\x81RPa\x18\tV[a\r\x89`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7Foptimism_goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7FOptimism Goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\x01\xA4\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1A\x81R` \x01\x7Fhttps://goerli.optimism.io\0\0\0\0\0\0\x81RP\x81RPa\x18\tV[a\x0EN`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7Farbitrum_one\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7FArbitrum One\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA4\xB1\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Fhttps://arb1.arbitrum.io/rpc\0\0\0\0\x81RP\x81RPa\x18\tV[a\x0E\xF6`@Q\x80`@\x01`@R\x80`\x13\x81R` \x01\x7Farbitrum_one_goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x13\x81R` \x01\x7FArbitrum One Goerli\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01b\x06n\xED\x81R` \x01`@Q\x80``\x01`@R\x80`%\x81R` \x01a)\x80`%\x919\x90Ra\x18\tV[a\x0F\xBB`@Q\x80`@\x01`@R\x80`\r\x81R` \x01\x7Farbitrum_nova\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\r\x81R` \x01\x7FArbitrum Nova\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA4\xBA\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Fhttps://nova.arbitrum.io/rpc\0\0\0\0\x81RP\x81RPa\x18\tV[a\x10\x7F`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7Fpolygon\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x07\x81R` \x01\x7FPolygon\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`\x89\x81R` \x01`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7Fhttps://polygon-rpc.com\0\0\0\0\0\0\0\0\0\x81RP\x81RPa\x18\tV[a\x11'`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7Fpolygon_mumbai\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7FPolygon Mumbai\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01b\x018\x81\x81R` \x01`@Q\x80``\x01`@R\x80`!\x81R` \x01a)_`!\x919\x90Ra\x18\tV[a\x11\xCE`@Q\x80`@\x01`@R\x80`\t\x81R` \x01\x7Favalanche\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\t\x81R` \x01\x7FAvalanche\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA8j\x81R` \x01`@Q\x80``\x01`@R\x80`%\x81R` \x01a)\x13`%\x919\x90Ra\x18\tV[a\x12u`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7Favalanche_fuji\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0E\x81R` \x01\x7FAvalanche Fuji\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01a\xA8i\x81R` \x01`@Q\x80``\x01`@R\x80`*\x81R` \x01a)\xA5`*\x919\x90Ra\x18\tV[a\x13\x1B`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7Fbnb_smart_chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01\x7FBNB Smart Chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`8\x81R` \x01`@Q\x80``\x01`@R\x80`!\x81R` \x01a)\xCF`!\x919\x90Ra\x18\tV[a\x13\xC1`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7Fbnb_smart_chain_testnet\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7FBNB Smart Chain Testnet\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`a\x81R` \x01`@Q\x80``\x01`@R\x80`'\x81R` \x01a)8`'\x919\x90Ra\x18\tV[a\x14\x85`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7Fgnosis_chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP`@Q\x80``\x01`@R\x80`@Q\x80`@\x01`@R\x80`\x0C\x81R` \x01\x7FGnosis Chain\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81RP\x81R` \x01`d\x81R` \x01`@Q\x80`@\x01`@R\x80`\x1B\x81R` \x01\x7Fhttps://rpc.gnosischain.com\0\0\0\0\0\x81RP\x81RPa\x18\tV[V[a\x14\xB2`@Q\x80`\x80\x01`@R\x80``\x81R` \x01`\0\x81R` \x01``\x81R` \x01``\x81RP\x90V[\x81``\x01QQ`\0\x03a\x18\0W`@Q\x7F\x97Zl\xE9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rsq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97Zl\xE9\x90a\x15\x0F\x90\x86\x90`\x04\x01a \x86V[`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x92PPP\x80\x15a\x15MWP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x15J\x91\x90\x81\x01\x90a$]V[`\x01[a\x17\xFAW=\x80\x80\x15a\x15{W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x15\x80V[``\x91P[P`\0a\x15\x8C\x85a\x18cV[`@Q` \x01a\x15\x9C\x91\x90a%$V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x91\x90R`\x04T\x90\x91P`\xFF\x16\x15a\x16\xA0W\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1Cs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16c\xD1Esl\x82`\x02\x88`@Qa\x16\n\x91\x90a$AV[\x90\x81R`@Q\x90\x81\x90\x03` \x01\x81 \x7F\xFF\xFF\xFF\xFF\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\xE0\x85\x90\x1B\x16\x82Ra\x16O\x92\x91`\x04\x01a%eV[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15a\x16nW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x16\x96\x91\x90\x81\x01\x90a$]V[``\x85\x01Ra\x17;V[`@Q\x7F\xF8w\xCB\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rsq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\xF8w\xCB\x19\x90a\x16\xF0\x90\x84\x90`\x04\x01a \x86V[`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x17\rW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x175\x91\x90\x81\x01\x90a$]V[``\x85\x01R[`\0\x85`@Q` \x01a\x17N\x91\x90a&\x1EV[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90Ra\x17k\x91`$\x01a \x86V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x91\x90R` \x80\x82\x01\x80Q{\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x7F\x0B\xC4E\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x17\x81R\x85Q\x91\x86\x01\x91\x90\x91 \x82Q\x90\x91 \x91\x92P\x14\x15\x80a\x17\xE5WP``\x85\x01QQ\x15[\x15a\x17\xF2W\x82Q\x83` \x01\xFD[PPPa\x18\0V[``\x83\x01R[P\x80[\x92\x91PPV[`\0\x81`@\x01Q\x90P\x80`\x02\x84`@Qa\x18#\x91\x90a$AV[\x90\x81R` \x01`@Q\x80\x91\x03\x90 \x90\x81a\x18=\x91\x90a&\xB2V[P`@\x80Q` \x81\x01\x82R`\0\x81R\x90\x83\x01Ra\x18Z\x83\x83a\x1A)V[`@\x90\x91\x01RPV[```\0\x82\x90P`\0\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x18\x86Wa\x18\x86a!\x83V[`@Q\x90\x80\x82R\x80`\x1F\x01`\x1F\x19\x16` \x01\x82\x01`@R\x80\x15a\x18\xB0W` \x82\x01\x81\x806\x837\x01\x90P[P\x90P`\0[\x82Q\x81\x10\x15a\x1A!W`\0\x83\x82\x81Q\x81\x10a\x18\xD3Wa\x18\xD3a#\x92V[\x01` \x01Q\x7F\xFF\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x90P\x7Fa\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x10\x80\x15\x90a\x19nWP\x7Fz\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7F\xFF\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x82\x16\x11\x15[\x15a\x19\xCBWa\x19\x82` `\xF8\x83\x90\x1Ca'\xAEV[`\xF8\x1B\x83\x83\x81Q\x81\x10a\x19\x97Wa\x19\x97a#\x92V[` \x01\x01\x90~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x19\x16\x90\x81`\0\x1A\x90SPa\x1A\x0EV[\x80\x83\x83\x81Q\x81\x10a\x19\xDEWa\x19\xDEa#\x92V[` \x01\x01\x90~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x19\x16\x90\x81`\0\x1A\x90SP[P\x80a\x1A\x19\x81a$\tV[\x91PPa\x18\xB6V[P\x93\x92PPPV[\x81Q`\0\x03a\x1A\xE0W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`M`$\x82\x01R\x7FStdChains setChain(string,ChainD`D\x82\x01R\x7Fata): Chain alias cannot be the `d\x82\x01R\x7Fempty string.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x84\x82\x01R`\xA4\x01a\x05\x81V[\x80` \x01Q`\0\x03a\x1BtW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`;`$\x82\x01R\x7FStdChains setChain(string,ChainD`D\x82\x01R\x7Fata): Chain ID cannot be 0.\0\0\0\0\0`d\x82\x01R`\x84\x01a\x05\x81V[a\x1B|a\t\x1AV[` \x80\x82\x01Q`\0\x90\x81R`\x03\x90\x91R`@\x81 \x80Ta\x1B\x9B\x90a \x99V[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x1B\xC7\x90a \x99V[\x80\x15a\x1C\x14W\x80`\x1F\x10a\x1B\xE9Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x1C\x14V[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x1B\xF7W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P\x80Q`\0\x14\x80a\x1C8WP\x82\x80Q\x90` \x01 \x81\x80Q\x90` \x01 \x14[` \x83\x01Q`@Q\x7Fi\0\xA3\xAE\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x81\x01\x91\x90\x91Rsq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x1C\xA7W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x1C\xCF\x91\x90\x81\x01\x90a$]V[\x82`@Q` \x01a\x1C\xE1\x92\x91\x90a'\xC7V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90a\x1D(W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x01a\x05\x81\x91\x90a \x86V[P`\0`\x01\x84`@Qa\x1D;\x91\x90a$AV[\x90\x81R` \x01`@Q\x80\x91\x03\x90 `\x01\x01T\x90P`\x03`\0\x82\x81R` \x01\x90\x81R` \x01`\0 `\0a\x1Dn\x91\x90a\x1E$V[`@Q\x80`\x80\x01`@R\x80\x84`\0\x01Q\x81R` \x01\x84` \x01Q\x81R` \x01\x85\x81R` \x01\x84`@\x01Q\x81RP`\x01\x85`@Qa\x1D\xAB\x91\x90a$AV[\x90\x81R`@Q\x90\x81\x90\x03` \x01\x90 \x81Q\x81\x90a\x1D\xC8\x90\x82a&\xB2V[P` \x82\x01Q`\x01\x82\x01U`@\x82\x01Q`\x02\x82\x01\x90a\x1D\xE7\x90\x82a&\xB2V[P``\x82\x01Q`\x03\x82\x01\x90a\x1D\xFC\x90\x82a&\xB2V[PPP` \x80\x84\x01Q`\0\x90\x81R`\x03\x90\x91R`@\x90 a\x1E\x1D\x85\x82a&\xB2V[PPPPPV[P\x80Ta\x1E0\x90a \x99V[`\0\x82U\x80`\x1F\x10a\x1E@WPPV[`\x1F\x01` \x90\x04\x90`\0R` `\0 \x90\x81\x01\x90a\x1E^\x91\x90a\x1EaV[PV[[\x80\x82\x11\x15a\x1EvW`\0\x81U`\x01\x01a\x1EbV[P\x90V[`\0` \x82\x84\x03\x12\x15a\x1E\x8CW`\0\x80\xFD[P5\x91\x90PV[`\0[\x83\x81\x10\x15a\x1E\xAEW\x81\x81\x01Q\x83\x82\x01R` \x01a\x1E\x96V[PP`\0\x91\x01RV[`\0\x81Q\x80\x84Ra\x1E\xCF\x81` \x86\x01` \x86\x01a\x1E\x93V[`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01` \x01\x92\x91PPV[`@\x81R`\0a\x1E\xF6`@\x83\x01\x85a\x1E\xB7V[\x90Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x83\x16` \x83\x01R\x93\x92PPPV[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x14a\x1E^W`\0\x80\xFD[`\0\x80\x83`\x1F\x84\x01\x12a\x1FOW`\0\x80\xFD[P\x815g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x1FgW`\0\x80\xFD[` \x83\x01\x91P\x83` \x82\x85\x01\x01\x11\x15a\x1F\x7FW`\0\x80\xFD[\x92P\x92\x90PV[`\0\x80`\0\x80`\0\x80`\x80\x87\x89\x03\x12\x15a\x1F\x9FW`\0\x80\xFD[\x865a\x1F\xAA\x81a\x1F\x1BV[\x95P` \x87\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\x1F\xC7W`\0\x80\xFD[a\x1F\xD3\x8A\x83\x8B\x01a\x1F=V[\x90\x97P\x95P`@\x89\x015\x91P\x80\x82\x11\x15a\x1F\xECW`\0\x80\xFD[Pa\x1F\xF9\x89\x82\x8A\x01a\x1F=V[\x90\x94P\x92PP``\x87\x015a \r\x81a\x1F\x1BV[\x80\x91PP\x92\x95P\x92\x95P\x92\x95V[` \x81R`\0\x82Q`\x80` \x84\x01Ra 7`\xA0\x84\x01\x82a\x1E\xB7V[\x90P` \x84\x01Q`@\x84\x01R`@\x84\x01Q`\x1F\x19\x80\x85\x84\x03\x01``\x86\x01Ra _\x83\x83a\x1E\xB7V[\x92P``\x86\x01Q\x91P\x80\x85\x84\x03\x01`\x80\x86\x01RPa }\x82\x82a\x1E\xB7V[\x95\x94PPPPPV[` \x81R`\0a\t\x13` \x83\x01\x84a\x1E\xB7V[`\x01\x81\x81\x1C\x90\x82\x16\x80a \xADW`\x7F\x82\x16\x91P[` \x82\x10\x81\x03a \xE6W\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[\x81\x83R\x81\x81` \x85\x017P`\0` \x82\x84\x01\x01R`\0` `\x1F\x19`\x1F\x84\x01\x16\x84\x01\x01\x90P\x92\x91PPV[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x86\x16\x81R``` \x82\x01R`\0a!G``\x83\x01\x86\x88a \xECV[\x82\x81\x03`@\x84\x01Ra!Z\x81\x85\x87a \xECV[\x98\x97PPPPPPPPV[`\0` \x82\x84\x03\x12\x15a!xW`\0\x80\xFD[\x81Qa\t\x13\x81a\x1F\x1BV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`A`\x04R`$`\0\xFD[`@\x80Q\x90\x81\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x82\x82\x10\x17\x15a!\xD5Wa!\xD5a!\x83V[`@R\x90V[`@Q`\x1F\x82\x01`\x1F\x19\x16\x81\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x82\x82\x10\x17\x15a\"\x04Wa\"\x04a!\x83V[`@R\x91\x90PV[`\0\x82`\x1F\x83\x01\x12a\"\x1DW`\0\x80\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\"7Wa\"7a!\x83V[a\"J` `\x1F\x19`\x1F\x84\x01\x16\x01a!\xDBV[\x81\x81R\x84` \x83\x86\x01\x01\x11\x15a\"_W`\0\x80\xFD[a\"p\x82` \x83\x01` \x87\x01a\x1E\x93V[\x94\x93PPPPV[`\0` \x80\x83\x85\x03\x12\x15a\"\x8BW`\0\x80\xFD[\x82Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\"\xA3W`\0\x80\xFD[\x81\x85\x01\x91P\x85`\x1F\x83\x01\x12a\"\xB7W`\0\x80\xFD[\x81Q\x81\x81\x11\x15a\"\xC9Wa\"\xC9a!\x83V[a\"\xD7\x84\x82`\x05\x1B\x01a!\xDBV[\x81\x81R`\x05\x91\x90\x91\x1B\x83\x01\x84\x01\x90\x84\x81\x01\x90\x88\x83\x11\x15a\"\xF6W`\0\x80\xFD[\x85\x85\x01[\x83\x81\x10\x15a#\x85W\x80Q\x85\x81\x11\x15a#\x11W`\0\x80\xFD[\x86\x01`?\x81\x01\x8B\x13a#\"W`\0\x80\xFD[a#*a!\xB2V[\x80\x8C``\x84\x01\x11\x15a#;W`\0\x80\xFD[\x89\x83\x01[``\x84\x01\x81\x10\x15a#uW\x80Q\x89\x81\x11\x15a#YW`\0\x80\xFD[a#g\x8F\x8D\x83\x88\x01\x01a\"\x0CV[\x84RP\x91\x8A\x01\x91\x8A\x01a#?V[P\x85RPP\x91\x86\x01\x91\x86\x01a\"\xFAV[P\x98\x97PPPPPPPPV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`2`\x04R`$`\0\xFD[`\0` \x82\x84\x03\x12\x15a#\xD3W`\0\x80\xFD[PQ\x91\x90PV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x11`\x04R`$`\0\xFD[`\0\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x03a$:Wa$:a#\xDAV[P`\x01\x01\x90V[`\0\x82Qa$S\x81\x84` \x87\x01a\x1E\x93V[\x91\x90\x91\x01\x92\x91PPV[`\0` \x82\x84\x03\x12\x15a$oW`\0\x80\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a$\x86W`\0\x80\xFD[a\"p\x84\x82\x85\x01a\"\x0CV[\x7FStdChains getChain(uint256): Cha\x81R\x7Fin with ID \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x82\x01R`\0\x82Qa$\xF0\x81`+\x85\x01` \x87\x01a\x1E\x93V[\x7F not found.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`+\x93\x90\x91\x01\x92\x83\x01RP`6\x01\x91\x90PV[`\0\x82Qa%6\x81\x84` \x87\x01a\x1E\x93V[\x7F_RPC_URL\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x92\x01\x91\x82RP`\x08\x01\x91\x90PV[`@\x81R`\0a%x`@\x83\x01\x85a\x1E\xB7V[` \x83\x82\x03\x81\x85\x01R`\0\x85Ta%\x8E\x81a \x99V[\x80\x85R`\x01\x82\x81\x16\x80\x15a%\xA9W`\x01\x81\x14a%\xE1Wa&\x0FV[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\0\x84\x16\x86\x88\x01R\x85\x83\x15\x15`\x05\x1B\x88\x01\x01\x94Pa&\x0FV[\x89`\0R\x85`\0 `\0[\x84\x81\x10\x15a&\x07W\x81T\x89\x82\x01\x89\x01R\x90\x83\x01\x90\x87\x01a%\xECV[\x88\x01\x87\x01\x95PP[P\x92\x99\x98PPPPPPPPPV[\x7Finvalid rpc url \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\0\x82Qa&V\x81`\x10\x85\x01` \x87\x01a\x1E\x93V[\x91\x90\x91\x01`\x10\x01\x92\x91PPV[`\x1F\x82\x11\x15a&\xADW`\0\x81\x81R` \x81 `\x1F\x85\x01`\x05\x1C\x81\x01` \x86\x10\x15a&\x8AWP\x80[`\x1F\x85\x01`\x05\x1C\x82\x01\x91P[\x81\x81\x10\x15a&\xA9W\x82\x81U`\x01\x01a&\x96V[PPP[PPPV[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a&\xCCWa&\xCCa!\x83V[a&\xE0\x81a&\xDA\x84Ta \x99V[\x84a&cV[` \x80`\x1F\x83\x11`\x01\x81\x14a'3W`\0\x84\x15a&\xFDWP\x85\x83\x01Q[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x03\x86\x90\x1B\x1C\x19\x16`\x01\x85\x90\x1B\x17\x85Ua&\xA9V[`\0\x85\x81R` \x81 `\x1F\x19\x86\x16\x91[\x82\x81\x10\x15a'bW\x88\x86\x01Q\x82U\x94\x84\x01\x94`\x01\x90\x91\x01\x90\x84\x01a'CV[P\x85\x82\x10\x15a'\x9EW\x87\x85\x01Q\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x03\x88\x90\x1B`\xF8\x16\x1C\x19\x16\x81U[PPPPP`\x01\x90\x81\x1B\x01\x90UPV[`\xFF\x82\x81\x16\x82\x82\x16\x03\x90\x81\x11\x15a\x18\x03Wa\x18\x03a#\xDAV[\x7FStdChains setChain(string,ChainD\x81R\x7Fata): Chain ID \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x82\x01R`\0\x83Qa(%\x81`/\x85\x01` \x88\x01a\x1E\x93V[\x7F already used by \"\0\0\0\0\0\0\0\0\0\0\0\0\0\0`/\x91\x84\x01\x91\x82\x01R\x83Qa(b\x81`A\x84\x01` \x88\x01a\x1E\x93V[\x7F\".\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`A\x92\x90\x91\x01\x91\x82\x01R`C\x01\x94\x93PPPPV\xFEhttps://mainnet.infura.io/v3/b9794ad1ddf84dfb8c34d6bb5dca2001https://sepolia.infura.io/v3/b9794ad1ddf84dfb8c34d6bb5dca2001https://api.avax.network/ext/bc/C/rpchttps://rpc.ankr.com/bsc_testnet_chapelhttps://rpc-mumbai.maticvigil.comhttps://goerli-rollup.arbitrum.io/rpchttps://api.avax-test.network/ext/bc/C/rpchttps://bsc-dataseed1.binance.orghttps://goerli.infura.io/v3/b9794ad1ddf84dfb8c34d6bb5dca2001";
    /// The deployed bytecode of the contract.
    pub static DEPLOYRESTURANTWITHPKOWNER_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct DeployResturantWithPkOwner<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for DeployResturantWithPkOwner<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for DeployResturantWithPkOwner<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for DeployResturantWithPkOwner<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for DeployResturantWithPkOwner<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(DeployResturantWithPkOwner))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> DeployResturantWithPkOwner<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    DEPLOYRESTURANTWITHPKOWNER_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                DEPLOYRESTURANTWITHPKOWNER_ABI.clone(),
                DEPLOYRESTURANTWITHPKOWNER_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `IS_SCRIPT` (0xf8ccbf47) function
        pub fn is_script(&self) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([248, 204, 191, 71], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `deployments` (0x06609bbe) function
        pub fn deployments(
            &self,
            p0: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            (::std::string::String, ::ethers::core::types::Address),
        > {
            self.0
                .method_hash([6, 96, 155, 190], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `findChainName` (0xd2007265) function
        pub fn find_chain_name(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([210, 0, 114, 101], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getChain` (0x32e21ae7) function
        pub fn get_chain(&self) -> ::ethers::contract::builders::ContractCall<M, Chain> {
            self.0
                .method_hash([50, 226, 26, 231], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `run` (0x173757ed) function
        pub fn run(
            &self,
            resturant_owner: ::ethers::core::types::Address,
            name: ::std::string::String,
            symbol: ::std::string::String,
            controller_address: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash(
                    [23, 55, 87, 237],
                    (resturant_owner, name, symbol, controller_address),
                )
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for DeployResturantWithPkOwner<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `InvalidChain` with signature `InvalidChain()` and selector `0xafe7f4e0`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidChain", abi = "InvalidChain()")]
    pub struct InvalidChain;
    ///Container type for all input parameters for the `IS_SCRIPT` function with signature `IS_SCRIPT()` and selector `0xf8ccbf47`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "IS_SCRIPT", abi = "IS_SCRIPT()")]
    pub struct IsScriptCall;
    ///Container type for all input parameters for the `deployments` function with signature `deployments(uint256)` and selector `0x06609bbe`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "deployments", abi = "deployments(uint256)")]
    pub struct DeploymentsCall(pub ::ethers::core::types::U256);
    ///Container type for all input parameters for the `findChainName` function with signature `findChainName()` and selector `0xd2007265`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "findChainName", abi = "findChainName()")]
    pub struct FindChainNameCall;
    ///Container type for all input parameters for the `getChain` function with signature `getChain()` and selector `0x32e21ae7`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getChain", abi = "getChain()")]
    pub struct GetChainCall;
    ///Container type for all input parameters for the `run` function with signature `run(address,string,string,address)` and selector `0x173757ed`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "run", abi = "run(address,string,string,address)")]
    pub struct RunCall {
        pub resturant_owner: ::ethers::core::types::Address,
        pub name: ::std::string::String,
        pub symbol: ::std::string::String,
        pub controller_address: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum DeployResturantWithPkOwnerCalls {
        IsScript(IsScriptCall),
        Deployments(DeploymentsCall),
        FindChainName(FindChainNameCall),
        GetChain(GetChainCall),
        Run(RunCall),
    }
    impl ::ethers::core::abi::AbiDecode for DeployResturantWithPkOwnerCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <IsScriptCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsScript(decoded));
            }
            if let Ok(decoded)
                = <DeploymentsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Deployments(decoded));
            }
            if let Ok(decoded)
                = <FindChainNameCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::FindChainName(decoded));
            }
            if let Ok(decoded)
                = <GetChainCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetChain(decoded));
            }
            if let Ok(decoded)
                = <RunCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Run(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for DeployResturantWithPkOwnerCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::IsScript(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Deployments(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::FindChainName(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetChain(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Run(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for DeployResturantWithPkOwnerCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::IsScript(element) => ::core::fmt::Display::fmt(element, f),
                Self::Deployments(element) => ::core::fmt::Display::fmt(element, f),
                Self::FindChainName(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetChain(element) => ::core::fmt::Display::fmt(element, f),
                Self::Run(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<IsScriptCall> for DeployResturantWithPkOwnerCalls {
        fn from(value: IsScriptCall) -> Self {
            Self::IsScript(value)
        }
    }
    impl ::core::convert::From<DeploymentsCall> for DeployResturantWithPkOwnerCalls {
        fn from(value: DeploymentsCall) -> Self {
            Self::Deployments(value)
        }
    }
    impl ::core::convert::From<FindChainNameCall> for DeployResturantWithPkOwnerCalls {
        fn from(value: FindChainNameCall) -> Self {
            Self::FindChainName(value)
        }
    }
    impl ::core::convert::From<GetChainCall> for DeployResturantWithPkOwnerCalls {
        fn from(value: GetChainCall) -> Self {
            Self::GetChain(value)
        }
    }
    impl ::core::convert::From<RunCall> for DeployResturantWithPkOwnerCalls {
        fn from(value: RunCall) -> Self {
            Self::Run(value)
        }
    }
    ///Container type for all return fields from the `IS_SCRIPT` function with signature `IS_SCRIPT()` and selector `0xf8ccbf47`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct IsScriptReturn(pub bool);
    ///Container type for all return fields from the `deployments` function with signature `deployments(uint256)` and selector `0x06609bbe`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DeploymentsReturn {
        pub name: ::std::string::String,
        pub addr: ::ethers::core::types::Address,
    }
    ///Container type for all return fields from the `findChainName` function with signature `findChainName()` and selector `0xd2007265`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct FindChainNameReturn(pub ::std::string::String);
    ///Container type for all return fields from the `getChain` function with signature `getChain()` and selector `0x32e21ae7`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetChainReturn(pub Chain);
    ///Container type for all return fields from the `run` function with signature `run(address,string,string,address)` and selector `0x173757ed`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RunReturn(pub ::ethers::core::types::Address);
}
